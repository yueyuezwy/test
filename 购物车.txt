
购物车

商品接口
	接收什么参数：查询所有的不需要接收参数
	从数据库中查询所有的数据，将数据库中商品这个集合交给data 再通过json 返回给页面
商品接口的请求  
	什么时候请求：页面加载完毕之后
	请求接口成功： 用HTML拼接，再追加到页面









购物车接口
	 接收什么参数：用户的id号  
	数据库操作：根据用户id号查询当前用户购买的商品 交给data 再返回json数据给页面
购物车请求接口
	什么时候请求接口：页面加载完毕之后
	请求接口传递参数：用户id（ 因为还没有用缓存存取当前用户的id先用 userid=1）
	用HTML拼接，追加给页面








商品添加接口
	接收什么数据  用户id 和 商品编号
	接收之后做什么 
		1.先判断是否有传参
		2.过滤 检测传入的用户和商品是否存在 用户信息存在 userInfo中，商品存在goodsInfo中 判断是否为真
	操作数据库 
		根据什么条件判断  传入的用户id和商品编号同时存在cart表中

				数据交给find  给find判断
				1.存在为真 更新cart表中buy_num字段 
				2.不存在为假 插入一条记录 注意日期字段为（updtedAt=dat3("Y-m-d H:i:s",time()
	响应json数据  成功 提示更新成功 状态码为201 失败提示操作失败 状态码为500

商品添加请求接口
	什么时候请求接口：用户点击立即购买时触发点击事件时
	步骤：1.因为商品都是动态追加到页面的，要用事件委托交给父操作 
	      2.请求接口
			传递参数：用户id（ 因为还没有用缓存存取当前用户的id先用 userid=1）
				  商品编号（在显示到页面的追加数据中给立即购买添加id属性 属性值设为当前商品的goods_id）
		请求成功做什么：跳转到购物车页面






删除接口：
	接收什么数据 用户id 和 商品编号 判断有没有接收参数
	操作数据库 删除符合传入的用户id 和 商品Bain好的数据 交给rs  判断rs是否为真 为假 显示不存在 为真 显示已删除
删除请求接口
	什么时候请求接口 用户点击删除时
	步骤一：用事件委托 
	步骤二：请求接口 传递的参数 用户id（ 因为还没有用缓存存取当前用户的id先用 userid=1）
				  商品编号（在显示到页面的追加数据中给立即购买添加id属性 属性值设为当前商品的goods_id）
	步骤三 ：请求结束之后 删除当前删除的父元素的叫tr的元素



修改购物车数量接口
	接收什么参数：用户id 商品编号id 用户修改后的buy_num
			判断是否有参数
	操作数库
		步骤一：查询当前传入的商品编号在goods表中的商品
			查询到的集合交给goodsInfo  
			判断：为假 提示商品不存在
			判断 当前用户传入的商品数量与商品表中的goods_num比较 如过大于goods_num 提示商品库存不足 
			更新数据库中buy_num
请求购物车数量的接口
	什么时候请求：修改input中值的时候 通过事件委托  键盘松开事件
	传递的参数： 用户id 商品编号 给当前的input 添加id 属性 属性值为 goods_id  在通过attr获取商品编号的id
			buy_num  当前的val() 替换除了0-9的 为空字符

	请求接口成功做什么  alert 更新成功  
	注：考虑到键盘每次松开都会发送一次请求  给请求设置延迟定时器   每次点击之前先清除一下定时器





	
